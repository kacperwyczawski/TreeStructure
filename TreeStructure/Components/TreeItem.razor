@using TreeStructure.Services
@inject NodeService NodeService

<div class="border rounded mt-2 p-2 d-flex align-items-center">
    <div class="p-1">
        @if (CanBeExpanded)
        {
            @if (IsCollapsed)
            {
                <a @onclick="@OnExpand">
                    <img src="img/expand.svg" alt="expand"/>
                </a>
            }
            else
            {
                <a @onclick="@OnCollapse">
                    <img src="img/collapse.svg" alt="collapse"/>
                </a>
            }
        }
        else
        {
            <img src="img/expand.svg" alt="expand" style="opacity: 0.25;"/>
        }
    </div>
    <div class="p-1">
        @* TODO: get name from service *@
        <span>@Text</span>
    </div>
    <div class="p-1 flex-grow-1">
        <span class="text-muted">#@Id</span>
    </div>
    <div class="p-1">
        <a @onclick="@(() => _showAddDialog = true)">
            <img src="img/add.svg" alt="add"/>
        </a>
    </div>
    <div class="p-1">
        <a @onclick="@(() => _showRenameDialog = true)">
            <img src="img/edit.svg" alt="edit"/>
        </a>
    </div>
    <div class="p-1">
        <a @onclick="@OnMove">
            <img src="img/move.svg" alt="move"/>
        </a>
    </div>
    <div class="p-1">
        <a @onclick="@OnDelete">
            <img src="img/delete.svg" alt="delete"/>
        </a>
    </div>
</div>

@if (_showAddDialog)
{
    <TextFormDialog NodeId="@Id"
                    Title="Add child node to: "
                    ConfirmButtonText="Add"
                    LabelText="Enter name for new node"
                    OnCancel="@(() => _showAddDialog = false)"
                    OnConfirm="@OnAdd"/>
}

@if (_showRenameDialog)
{
    <TextFormDialog NodeId="@Id"
                    Title="Rename node: "
                    ConfirmButtonText="Rename"
                    LabelText="Enter new name for node"
                    PlaceholderText="@NodeService.GetName(Id)"
                    OnCancel="@(() => _showRenameDialog = false)"
                    OnConfirm="@OnRename"/>
}

@code {

    [Parameter]
    public string? Text { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public bool IsCollapsed { get; set; }

    [Parameter]
    public bool CanBeExpanded { get; set; } = true;

    [Parameter]
    public EventCallback OnExpand { get; set; }

    [Parameter]
    public EventCallback OnCollapse { get; set; }

    [Parameter]
    public EventCallback OnDelete { get; set; }

    [Parameter]
    public EventCallback OnMove { get; set; }
    
    [Parameter]
    [EditorRequired]
    public Tree ParentTree { get; set; } = null!;

    bool _showAddDialog;
    
    bool _showRenameDialog;

    void OnAdd(string name)
    {
        _showAddDialog = false;
        var node = new Node { Name = name, ParentId = Id };
        NodeService.AddNode(node);
        ParentTree.Refresh();
    }

    private void OnRename(string name)
    {
        _showRenameDialog = false;
        NodeService.RenameNode(Id, name);
        ParentTree.Refresh();
    }

}