@using TreeStructure.Services
@inject NodeService NodeService

<ol>
    <li style="list-style-type: none">
        @if (NodeService.Exists(NodeId))
        {
            @* Node card *@
            <TreeViewItem NodeId="NodeId"
                          OnIsExpandedChanged="@(b => _isExpanded = b)"
                          OnNodesChanged="@(() => { OnNodesChanged.InvokeAsync(); StateHasChanged(); })"/>

            @* Render children *@
            @if (_isExpanded && NodeService.HasChildren(NodeId))
            {
                @foreach (var childId in NodeService.GetChildren(NodeId).Select(n => n.Id))
                {
                    <TreeViewRecursive NodeId="@childId"/>
                }
            }
        }
    </li>
</ol>

@code {

    [Parameter]
    public int NodeId { get; set; }
    
    [Parameter]
    public EventCallback OnNodesChanged { get; set; }

    bool _isExpanded;

}