@using TreeStructure.Models
<div class="my-4 p-4 container rounded shadow">
    <form>
        <div class="mb-3 form-floating">
            <input type="text" class="form-control" id="nodeName" @bind="_nodeName" placeholder="example name">
            <label for="nodeName">Node name:</label>
        </div>
        <div class="mb-3 form-check">
            <input type="checkbox" class="form-check-input" id="addAsRoot" @bind="_addAsRoot">
            <label class="form-check-label" for="addAsRoot">Add as root</label>
        </div>
        @if (!_addAsRoot)
        {
            <div class="mb-3  form-floating">
                <input type="number" class="form-control" id="parentNodeId" @bind="_parentNodeId" placeholder="42"/>
                <label for="parentNodeId">Parent node id:</label>
            </div>
        }
        <div class="mb-3">
            <button type="submit" class="btn btn-primary mt-3" @onclick="@HandleAddNode">
                Add node
            </button>
        </div>
    </form>
</div>

@code {
    
    [Parameter]
    public EventCallback<Node> OnAddNode { get; set; }
    
    int? _parentNodeId;

    string? _nodeName;

    bool _addAsRoot;
    
    void HandleAddNode()
    {
        if (string.IsNullOrEmpty(_nodeName) || string.IsNullOrWhiteSpace(_nodeName))
            return;
        
        if (_addAsRoot)
        {
            OnAddNode.InvokeAsync(new Node(_nodeName, null, null));
        }
        else
        {
            if (_parentNodeId is null)
                return;
            
            OnAddNode.InvokeAsync(new Node(_nodeName, null, _parentNodeId));
        }
    }

}