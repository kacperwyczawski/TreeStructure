@page "/"
@using TreeStructure.Services
@using TreeStructure.Models

@inject NodeService NodeService

<!-- form for creating nodes -->
<div class="mt-5 p-5 container rounded shadow">
    <form>
        <div class="mb-3 form-floating">
            <input type="text" class="form-control" id="nodeName" @bind="_nodeName" placeholder="example name">
            <label for="nodeName">Node name:</label>
        </div>
        <div class="mb-3 form-check">
            <input type="checkbox" class="form-check-input" id="addAsRoot" @bind="_addAsRoot">
            <label class="form-check-label" for="addAsRoot">Add as root</label>
        </div>
        @if (!_addAsRoot)
        {
            <div class="mb-3  form-floating">
                <input type="number" class="form-control" id="parentNodeId" @bind="_selectedNodeId" placeholder="42"/>
                <label for="parentNodeId">Parent node id:</label>
            </div>
        }
        <div class="mb-3">
            <button type="submit" class="btn btn-primary mt-3" @onclick="HandleSubmit">Add node</button>
        </div>
    </form>
</div>

<!-- tree structure -->
@if (_rootNodes.Any())
{
    @foreach (var rootNode in _rootNodes)
    {
        <div class="mt-5 p-5 container rounded shadow">
            <ul>
                <Tree RootNode="@rootNode"></Tree>
            </ul>
        </div>
    }
}
else
{
    <div class="mt-5 p-5 container rounded shadow">
        <p>Add some nodes to see the tree structure</p>
    </div>
}

@code {

    private string? _nodeName;

    private int? _selectedNodeId;

    private bool _addAsRoot;

    private List<Node> _rootNodes = new();

    private void HandleSubmit()
    {
        if (_nodeName is null)
            return;

        if (!_addAsRoot && _selectedNodeId is null)
            return;

    // create node
        var node = new Node(_nodeName, null, _selectedNodeId);

    // add node to database
        NodeService.AddNode(node);
    }

    protected override void OnInitialized()
    {
    // get all nodes from database
        _rootNodes = NodeService.GetRootNodes();
    }

}