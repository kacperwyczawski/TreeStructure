@page "/"
@using TreeStructure.Services

@inject NodeService NodeService
@inject IDialogService DialogService

<Buttons
    OnDeleteAll="@(() => { NodeService.DeleteAllNodes(); _treeReference.Refresh(); })"
    OnSampleData="@(() => { NodeService.DeleteAllNodes(); NodeService.Seed(); _treeReference.Refresh(); })"
    OnAddRoot="@OnAddRoot"/>

<MudPaper Class="pa-5 my-5 mx-auto" MaxWidth="1200px">
    <MudSelect @bind-Value="_sort" Label="Selected sorting:"
               OpenIcon="@Icons.Material.Filled.Sort" AdornmentColor="Color.Secondary">
        @foreach (NodeService.Sort sort in Enum.GetValues(typeof(NodeService.Sort)))
        {
            <MudSelectItem Value="@sort">@sort</MudSelectItem>
        }
    </MudSelect>
</MudPaper>

<CascadingValue Value="_sort">
    <TreeViewFrame @ref="_treeReference"/>
</CascadingValue>

@code {

    TreeViewFrame _treeReference = null!;

    NodeService.Sort _sort;

    async Task OnAddRoot()
    {
        var dialog = DialogService.Show<AddNodeDialog>("Add root node");

        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            _treeReference.Refresh();
        }
    }

}